[platformio]
default_envs = T-Display-AMOLED
src_dir = src
boards_dir = boards


[env]
check_tool = clangtidy
lib_extra_dirs = ${PROJECT_DIR}
lib_ignore = lib_deps
platform = espressif32@6.7.0
framework = arduino
upload_speed = 921600
monitor_speed = 115200
build_flags =
    -DBOARD_HAS_PSRAM
    -DLV_CONF_INCLUDE_SIMPLE
    -DDISABLE_ALL_LIBRARY_WARNINGS
    ; Enable -DARDUINO_USB_CDC_ON_BOOT will start printing and wait for terminal access during startup
    -DARDUINO_USB_CDC_ON_BOOT=1
    ; USB host example must disable usb cdc
    ; Enable -UARDUINO_USB_CDC_ON_BOOT will turn off printing and will not block when using the battery
    ; -UARDUINO_USB_CDC_ON_BOOT
    -DCORE_DEBUG_LEVEL=1
    ; Use c+=17!!!
    ; c++ 17 standard: Working
    ;-std=gnu++17 
    ; c++ 20 standard: Working
    -std=gnu++2a
    ; c++ 23 standard: Not working
    ; -std=gnu++03


build_unflags =
    -std=gnu++11

; Remove src_filter - let LV_Helper_v9.cpp compile normally like in working AmiPixel project

monitor_filters =
    default
    esp32_exception_decoder

lib_deps = 
    xinyuan-lilygo/LilyGo-AMOLED-Series@^1.2.1 
    adafruit/Adafruit NeoPixel
    bxparks/AceButton
    lvgl/lvgl@9.3.0
    FS
    SPIFFS
    ArduinoJson

board_build.filesystem = spiffs

; ===================================
; === Device ===
; ===================================
[env:T-Display-AMOLED]
extends = env
board = T-Display-AMOLED
build_flags =
    ${env.build_flags}


; Custom target to upload both firmware and SPIFFS
[target_uploadfs]
inherits = env:T-Display-AMOLED  ; Inherit settings from your T-Display-AMOLED environment
uploadfs_flags = --filesystem spiffs ; Specify filesystem type as SPIFFS
uploadfs_command = ${platformio.build_dir}/${PIOENV}/spiffs.bin ; Path to the SPIFFS image